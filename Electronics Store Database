/In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data/

/getting acquainted with the data sets/
select * from bit_db.jansales

select * from customers

/determining the number of orders placed in January/
select count(orderID) from bit_db.jansales
where length(orderID) = 6
and orderID <> 'Order ID'


/determining how many of the January orders were for an iPhone/
select count(orderID) from bit_db.jansales
where product = 'iPhone'
and length(orderID) = 6
and orderID <> 'Order ID'

/selecting all customer accounts for orders placed in february by joining two tables/
select distinct acctnum from bit_db.customers
inner join bit_db.febsales
on febsales.orderID = customers.order_id
where length(orderID) = 6
and orderID <> 'Order ID'

/determining which January product was the least expensive, and what its price is/
select distinct product, price from bit_db.jansales 
where price in(select min(price) from BIT_DB.JanSales)


/determining the total revenue for each product sold in January/
select sum(quantity)*price as revenue,
product from bit_db.jansales 
group by product

/determining which products were sold in February at 548 Lincoln St in Seattle, how many of each sold, and total revenue/
select product, sum(quantity), sum(quantity)*price as revenue
from BIT_DB.FebSales
where location = '548 Lincoln St, Seattle, WA 98101'
group by product

/determining how many customers ordered more than two products at a time in February, and average spent for those customers/
select count(distinct customers.acctnum), avg(quantity*price) as average_spent from bit_db.febsales
left join bit_db.customers
on febsales.orderid = customers.order_id
where febsales.quantity >2
and length(orderid) = 6
and orderid <> 'Order ID' 


/employing data filtering with date ranges and specific dates/
select orderdate from bit_db.febsales 
where orderdate between '02/13/19' and '02/18/19'

select location 
from bit_db.febsales
where orderdate = '02/18/19 01:35'

select location 
from bit_db.febsales
where orderdate like '02/18/19%'

select sum(quantity) 
from bit_db.febsales
where orderdate like '2/18/19%'

/employing data filtering with product and price/
select distinct product 
from bit_db.febsales
where product like '%batteries%'

select distinct product, price 
from bit_db.febsales
where price like '%.99'

/listing all products sold in february in LA, nicluding how many of each were sold/
select distinct product, sum(quantity) from bit_db.febsales 
where location like '%Los Angeles%'
group by product

/determining which NY locations had at least 3 orders in January, and how many orders they received/
select distinct location, count(orderID)
from bit_db.jansales
where location like '%NY%'
and length(orderID)=6
and orderid <> 'Order ID'
having (count(orderID)>2)

/determining how many of each type of headphone was sold in February/
select distinct product, sum(quantity)
from bit_db.febsales 
where product like '%headphone%'
and length(orderID)=6
and orderid <> 'Order ID'
group by product

/determining the overall average amount spent per account in february/
select sum(price*quantity)/count(customers.acctnum) 
from bit_db.febsales
left join bit_db.customers
on febsales.orderid=customers.order_id
where length(orderID)=6
and orderid <> 'Order ID'

/determining the overall average quantity of products purchased per account in february/
select sum(quantity)/count(customers.acctnum)
from bit_db.febsales 
left join bit_db.customers
on febsales.orderid=customers.order_id
where length(orderID)=6
and orderid <> 'Order ID'

/determining which product brought in the most revenue in January and how much revenue that was/
select distinct product, sum(price*quantity)
from bit_db.jansales
group by product
order by sum(quantity*price)desc
limit 1
